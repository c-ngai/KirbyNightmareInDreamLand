Sprint 2 Quality Code Review 9/26/24

Author of Code Review: Carman Ngai
Name of .cs file being reviewed: WaddleDee.cs
Author of .cs file being reivewed: Gwyneth Barnholtz

Time taken to complete review: 30 minutes

################################################################################

10 Code Smells:

1. Data Clumps
2. SameNameDifferentMeaning
3. TooMuchDocumentation
4. Divergent Change
5. Shotgun Surgery
6. Middleman
7. Lazy Class
8. Inappropriate Intimacy
9. Backpedaling
10. YouDon'tNeedItAnymore

################################################################################

Code Quality:

    Refactoring should be done to deal with the magic numbers and create a single point of control from our Constants.cs file. 
The set for the "Position" property should have a check to achieve some level of control such as ensuring that no one is trying 
to change position to a negative value and it is within the bounds of the game window. Currently the TakeDamage() method is 
changing the pose to hurt and it then calls the Die() method if health goes below zero which also changes the pose to hurt. I 
think this is a temporary implementation since we agreed that enemies disappear when they die. If so this should be commented 
to ensure it's not forgotten in future development. 

Hypothetic Change Suggestion:

    The separation of each enemey type into its own class would allow us to make distinct AI enemy behavior that could make
our game more engaging if we decided to implement simple AI. I think the current implementation would support such changes
by adding changes to the Move() and Attack() methods.

Comments

    Overall the code was very readable and the methods were concise and fit the single-responsibility principle. Variables
and methods were well named. 